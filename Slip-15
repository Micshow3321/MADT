Q1.

xml.file

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/editTextNumber1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter first number"
        android:inputType="numberDecimal" />

    <EditText
        android:id="@+id/editTextNumber2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter second number"
        android:inputType="numberDecimal" />

    <Button
        android:id="@+id/buttonAdd"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="ADD" />

    <Button
        android:id="@+id/buttonSubtract"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="SUB" />

    <Button
        android:id="@+id/buttonMultiply"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="MULT" />

    <Button
        android:id="@+id/buttonDivide"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="DIV" />
</LinearLayout>

java.file

package com.example.calculatorapp;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText editTextNumber1;
    private EditText editTextNumber2;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        editTextNumber1 = findViewById(R.id.editTextNumber1);
        editTextNumber2 = findViewById(R.id.editTextNumber2);
        Button buttonAdd = findViewById(R.id.buttonAdd);
        Button buttonSubtract = findViewById(R.id.buttonSubtract);
        Button buttonMultiply = findViewById(R.id.buttonMultiply);
        Button buttonDivide = findViewById(R.id.buttonDivide);

        buttonAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performOperation("ADD");
            }
        });

        buttonSubtract.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performOperation("SUB");
            }
        });

        buttonMultiply.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performOperation("MULT");
            }
        });

        buttonDivide.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                performOperation("DIV");
            }
        });
    }

    private void performOperation(String operation) {
        String num1Str = editTextNumber1.getText().toString().trim();
        String num2Str = editTextNumber2.getText().toString().trim();

        if (num1Str.isEmpty() || num2Str.isEmpty()) {
            Toast.makeText(this, "Please enter both numbers", Toast.LENGTH_SHORT).show();
            return;
        }

        double num1 = Double.parseDouble(num1Str);
        double num2 = Double.parseDouble(num2Str);
        double result;

        switch (operation) {
            case "ADD":
                result = num1 + num2;
                Toast.makeText(this, "Result: " + result, Toast.LENGTH_SHORT).show();
                break;
            case "SUB":
                result = num1 - num2;
                Toast.makeText(this, "Result: " + result, Toast.LENGTH_SHORT).show();
                break;
            case "MULT":
                result = num1 * num2;
                Toast.makeText(this, "Result: " + result, Toast.LENGTH_SHORT).show();
                break;
            case "DIV":
                if (num2 == 0) {
                    Toast.makeText(this, "Cannot divide by zero", Toast.LENGTH_SHORT).show();
                } else {
                    result = num1 / num2;
                    Toast.makeText(this, "Result: " + result, Toast.LENGTH_SHORT).show();
                }
                break;
            default:
                Toast.makeText(this, "Invalid operation", Toast.LENGTH_SHORT).show();
                break;
        }
    }
}

Q2.

xml.file

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <Button
        android:id="@+id/buttonDeposit"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Deposit" />

    <Button
        android:id="@+id/buttonWithdraw"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Withdraw" />

    <Button
        android:id="@+id/buttonCheckBalance"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Check Balance" />
</LinearLayout>

java.file

package com.example.bankapp;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private double balance = 0.0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button buttonDeposit = findViewById(R.id.buttonDeposit);
        Button buttonWithdraw = findViewById(R.id.buttonWithdraw);
        Button buttonCheckBalance = findViewById(R.id.buttonCheckBalance);

        buttonDeposit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showDepositDialog();
            }
        });

        buttonWithdraw.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showWithdrawDialog();
            }
        });

        buttonCheckBalance.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                checkBalance();
            }
        });
    }

    private void showDepositDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Deposit Money");

        final EditText input = new EditText(this);
        builder.setView(input);

        builder.setPositiveButton("Deposit", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                double amount = Double.parseDouble(input.getText().toString());
                deposit(amount);
            }
        });
        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.cancel();
            }
        });

        builder.show();
    }

    private void showWithdrawDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Withdraw Money");

        final EditText input = new EditText(this);
        builder.setView(input);

        builder.setPositiveButton("Withdraw", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                double amount = Double.parseDouble(input.getText().toString());
                withdraw(amount);
            }
        });
        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.cancel();
            }
        });

        builder.show();
    }

    private void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            Toast.makeText(this, "Deposited: " + amount, Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Invalid amount", Toast.LENGTH_SHORT).show();
        }
    }

    private void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            Toast.makeText(this, "Withdrawn: " + amount, Toast.LENGTH_SHORT).show();
        } else if (amount > balance) {
            Toast.makeText(this, "Insufficient balance", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "Invalid amount", Toast.LENGTH_SHORT).show();
        }
    }

    private void checkBalance() {
        Toast.makeText(this, "Current Balance: " + balance, Toast.LENGTH_SHORT).show();
    }
}
